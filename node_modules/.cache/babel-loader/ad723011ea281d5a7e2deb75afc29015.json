{"ast":null,"code":"var _jsxFileName = \"/Users/adrianwalker/V-School/todo-app/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoFrom from './TodoForm';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(todo, ...todos);\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id != id);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoFrom, {\n      onsubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/adrianwalker/V-School/todo-app/src/components/TodoList.js"],"names":["React","useState","TodoFrom","Todo","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","console","log","removeTodo","id","removeArr","filter","completeTodo","updatedTodos","map","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AACvC;AACH;;AAED,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,GAAGH,KAArB;AAEH,GAVD;;AAYA,QAAMS,UAAU,GAAGC,EAAE,IAAI;AACrB,UAAMC,SAAS,GAAG,CAAC,GAAGX,KAAJ,EAAWY,MAAX,CAAkBT,IAAI,IAAIA,IAAI,CAACO,EAAL,IAAWA,EAArC,CAAlB;AAEH,GAHD;;AAKA,QAAMG,YAAY,GAAGH,EAAE,IAAI;AACvB,QAAII,YAAY,GAAGd,KAAK,CAACe,GAAN,CAAUZ,IAAI,IAAI;AACjC,UAAIA,IAAI,CAACO,EAAL,KAAYA,EAAhB,EAAoB;AAChBP,QAAAA,IAAI,CAACa,UAAL,GAAkB,CAACb,IAAI,CAACa,UAAxB;AACH;;AACD,aAAOb,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACa,YAAD,CAAR;AACH,GARD;;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEZ;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,KAAb;AAAoB,MAAA,YAAY,EAAEa;AAAlC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GArCQd,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport TodoFrom from './TodoForm'\nimport Todo from './Todo';\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos)\n        console.log(todo, ...todos);\n\n    };\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id != id)\n        \n    }\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete\n            }\n            return todo\n        })\n        setTodos(updatedTodos)\n    }\n\n    return (\n        <div>\n            <h1>Todo List</h1>\n            <TodoFrom onsubmit={addTodo} />\n            <Todo todos={todos} completeTodo={completeTodo} />\n        </div>\n    )\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}